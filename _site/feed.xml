<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ProgSoc</title>
    <description>We are the University of Sussex Programming Society
</description>
    <link>http://yourdomain.com/other-website/</link>
    <atom:link href="http://yourdomain.com/other-website/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 22 May 2015 01:24:18 +0100</pubDate>
    <lastBuildDate>Fri, 22 May 2015 01:24:18 +0100</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Problem Four</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.codeeval.com/open_challenges/64/&quot;&gt;Problem Four&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You are climbing a stair case. It takes n steps to reach to the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;INPUT SAMPLE:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Your program should accept as its first argument a path to a filename. Each line in this file contains a positive integer which is the total number of stairs. Ignore all empty lines.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;p&gt;1) 10&lt;/p&gt;

&lt;p&gt;2) 20&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OUTPUT SAMPLE:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Print out the number of ways to climb to the top of the staircase.&lt;/p&gt;

&lt;p&gt;1) 89&lt;/p&gt;

&lt;p&gt;2) 10946&lt;/p&gt;
</description>
        <pubDate>Wed, 20 May 2015 00:00:00 +0100</pubDate>
        <link>http://yourdomain.com/other-website/problem/2015/05/20/2.html</link>
        <guid isPermaLink="true">http://yourdomain.com/other-website/problem/2015/05/20/2.html</guid>
        
        
        <category>problem</category>
        
      </item>
    
      <item>
        <title>Problem Three</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.codeeval.com/open_challenges/174/&quot;&gt;Problem Three&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Long serious texts are boring. Write a program that will make texts more informal: replace every other end punctuation mark (period ‘.’, exclamation mark ‘!’, or question mark ‘?’) with one of the following slang phrases, selecting them one after another:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;’, yeah!’&lt;/li&gt;
  &lt;li&gt;’, this is crazy, I tell ya.’&lt;/li&gt;
  &lt;li&gt;’, can I believe this?’&lt;/li&gt;
  &lt;li&gt;’, eh?’&lt;/li&gt;
  &lt;li&gt;’, aw yea.’&lt;/li&gt;
  &lt;li&gt;’, yo.’&lt;/li&gt;
  &lt;li&gt;’? No way!’&lt;/li&gt;
  &lt;li&gt;’. Awesome!’&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;INPUT SAMPLE:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The first argument is a file that contains a text.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;p&gt;Lorem ipsum dolor sit amet. Mea et habeo doming praesent. Te inani utroque recteque has, sea ne fugit verterem! Usu ei scripta phaedrum, an sed salutatus definiebas? Qui ut recteque gloriatur reformidans. Qui solum aeque sapientem cu. Eu nam nusquam quaestio principes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OUTPUT SAMPLE:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Print to stdout the results: the text with slang phrases.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;p&gt;Lorem ipsum dolor sit amet. Mea et habeo doming praesent, yeah! Te inani utroque recteque has, sea ne fugit verterem! Usu ei scripta phaedrum, an sed salutatus definiebas, this is crazy, I tell ya. Qui ut recteque gloriatur reformidans. Qui solum aeque sapientem cu, can U believe this? Eu nam nusquam quaestio principes.&lt;/p&gt;
</description>
        <pubDate>Wed, 20 May 2015 00:00:00 +0100</pubDate>
        <link>http://yourdomain.com/other-website/problem/2015/05/20/1.html</link>
        <guid isPermaLink="true">http://yourdomain.com/other-website/problem/2015/05/20/1.html</guid>
        
        
        <category>problem</category>
        
      </item>
    
      <item>
        <title>How to post on this website!</title>
        <description>&lt;p&gt;So you want to post on this website huh? Well that’s pretty easy, let me show you how. 
This site is hosted by &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; with &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;. It’s really
just a bunch of HTML templates that are generated to HTML. This document that
I am writing right now is in a variant of &lt;a href=&quot;http://kramdown.gettalong.org/&quot;&gt;Markdown&lt;/a&gt;. Once I upload 
this document to the correct directory on the GitHub page it will be automatically
turned into a blog post in HTML. Cool huh?&lt;/p&gt;

&lt;h2 id=&quot;how-to-post&quot;&gt;How to Post&lt;/h2&gt;
&lt;p&gt;So the first thing to do is to navigate your way to &lt;a href=&quot;https://github.com/sussex-progsoc/other-website/tree/gh-pages&quot;&gt;our repository&lt;/a&gt;. Log in
as the account on the Facebook page to edit, or create your own and I will invite
you to the organization. Make
sure you are on the &lt;strong&gt;gh-pages&lt;/strong&gt; branch (Have a look in the top left hand corner).
Click on the &lt;strong&gt;_posts&lt;/strong&gt; directory and you will see a couple of markdown documents.
When you open these documents GitHub will automatically render them so make sure you 
click on the &lt;strong&gt;Raw&lt;/strong&gt; button in the top right. You can see the basic layout of one 
of these posts. On the top you have the post meta information, like title and author. 
The most important bit is the &lt;strong&gt;layout&lt;/strong&gt; tag. That tells Jekyll that this is a blog
post.&lt;/p&gt;

&lt;p&gt;Go ahead and go back and the little plus sign here:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/other-website/assets/blogpics/plus.png&quot; alt=&quot;git make new file&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can go ahead and create a new markdown file. Use the existing files as a template
to make your very own post. You can do all sorts of styling in markdown so have a look.&lt;/p&gt;

&lt;h2 id=&quot;code-inclusion&quot;&gt;Code inclusion&lt;/h2&gt;
&lt;p&gt;You can also include code like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Blog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;writeup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;website&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Blog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;writeup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Website&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;writeup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;writeup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;website&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;website&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;website&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;upload&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writeup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Cool huh? I imagine that should come in handy!&lt;/p&gt;

&lt;h2 id=&quot;go-write-some-stuff&quot;&gt;Go write some stuff!&lt;/h2&gt;
&lt;p&gt;You can also push the &lt;strong&gt;gh-pages&lt;/strong&gt; branch of the progsoc repository to upload a 
post. I’ll write about that soon.&lt;/p&gt;

&lt;p&gt;Good luck posting!&lt;/p&gt;

</description>
        <pubDate>Wed, 13 May 2015 19:33:41 +0100</pubDate>
        <link>http://yourdomain.com/other-website/blog/2015/05/13/intro-to-website.html</link>
        <guid isPermaLink="true">http://yourdomain.com/other-website/blog/2015/05/13/intro-to-website.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Here&#39;s a little experiment...</title>
        <description>&lt;p&gt;here’s a little something something&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-haskell&quot; data-lang=&quot;haskell&quot;&gt;&lt;span class=&quot;nf&quot;&gt;quicksort&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Ord&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;  
&lt;span class=&quot;nf&quot;&gt;quicksort&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;[]&lt;/span&gt;  
&lt;span class=&quot;nf&quot;&gt;quicksort&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt;   
    &lt;span class=&quot;kr&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;smallerSorted&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quicksort&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;biggerSorted&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quicksort&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;  
    &lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;smallerSorted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;biggerSorted&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This code is from &lt;a href=&quot;http://learnyouahaskell.com/recursion&quot;&gt;Learn You A Haskell&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 13 May 2015 02:06:02 +0100</pubDate>
        <link>http://yourdomain.com/other-website/blog/2015/05/13/some-more.html</link>
        <guid isPermaLink="true">http://yourdomain.com/other-website/blog/2015/05/13/some-more.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>This is my title</title>
        <description>&lt;p&gt;Just making a post. Cool stuff huh? check this out &lt;a href=&quot;http://www.sussex.ac.uk/&quot;&gt;it’s good&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Wed, 13 May 2015 01:52:44 +0100</pubDate>
        <link>http://yourdomain.com/other-website/blog/2015/05/13/felix-own-post.html</link>
        <guid isPermaLink="true">http://yourdomain.com/other-website/blog/2015/05/13/felix-own-post.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://github.com/jekyll/jekyll-help&quot;&gt;Jekyll’s dedicated Help repository&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Tue, 12 May 2015 23:53:06 +0100</pubDate>
        <link>http://yourdomain.com/other-website/blog/2015/05/12/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://yourdomain.com/other-website/blog/2015/05/12/welcome-to-jekyll.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Problem Two</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.codeeval.com/open_challenges/190/&quot;&gt;Problem Two&lt;/a&gt;
Alice has invented a new card game to play with Bob. Alice made a deck of cards with random values between 1 and 52. Bob picks 5 cards. Then, he has to rearrange the cards so that by utilizing the operations plus, minus, or times, the value of the cards reach Alice’s favorite number, 42. More precisely, find operations such that ((((val1 op1 val2) op2 val3) op3 val4) op4 val5) = 42.&lt;/p&gt;

&lt;p&gt;Help Bob by writing a program to determine whether it is possible to reach 42 given 5 card values.&lt;/p&gt;

&lt;p&gt;For example, Bob picks 5 cards out of the deck containing 60, 1, 3, 5, and 20. Bob rearranges the cards and supplies four operations, so that 5 * 20 - 60 + 3 - 1 = 42.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;INPUT SAMPLE:&lt;/strong&gt;
The input consists of five integers on a line, separated by spaces. Each integer V is 0 &amp;lt;= V &amp;lt;= 52.&lt;/p&gt;

&lt;p&gt;1) 44 6 1 49 47&lt;/p&gt;

&lt;p&gt;2) 34 1 49 2 21&lt;/p&gt;

&lt;p&gt;3) 31 38 27 51 18&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OUTPUT SAMPLE:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For each test case print a line containing “YES” if it is possible to reach the value 42 according to the rules of the game, or “NO” otherwise.&lt;/p&gt;

&lt;p&gt;1) NO&lt;/p&gt;

&lt;p&gt;2) YES&lt;/p&gt;

&lt;p&gt;3) NO&lt;/p&gt;
</description>
        <pubDate>Mon, 27 Apr 2015 00:00:00 +0100</pubDate>
        <link>http://yourdomain.com/other-website/problem/2015/04/27/2.html</link>
        <guid isPermaLink="true">http://yourdomain.com/other-website/problem/2015/04/27/2.html</guid>
        
        
        <category>problem</category>
        
      </item>
    
      <item>
        <title>Problem One</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.codeeval.com/open_challenges/10/&quot;&gt;Problem One&lt;/a&gt;
Write a program which determines the Mth to the last element in a list.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;INPUT SAMPLE:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The first argument is a path to a file. The file contains the series of space delimited characters followed by an integer. The integer represents an index in the list (1-based), one per line.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;p&gt;1) a b c d 4&lt;/p&gt;

&lt;p&gt;2) e f g h 2&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OUTPUT SAMPLE:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Print to stdout the Mth element from the end of the list, one per line. If the index is larger than the number of elements in the list, ignore that input.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;p&gt;1) a&lt;/p&gt;

&lt;p&gt;2) g&lt;/p&gt;
</description>
        <pubDate>Mon, 27 Apr 2015 00:00:00 +0100</pubDate>
        <link>http://yourdomain.com/other-website/problem/2015/04/27/1.html</link>
        <guid isPermaLink="true">http://yourdomain.com/other-website/problem/2015/04/27/1.html</guid>
        
        
        <category>problem</category>
        
      </item>
    
  </channel>
</rss>
